[0.7.2]

FIXME: E110 схожая проблема с E100 только с generic функциями,
при переопределении обобщенной функции определенной
в суперклассе в подклассе будет зарегестрирована
функция суперкласса, происходит это так - декоратор
overload создает объект resolver и регистрирет обобщенную
функцию после чего отрабатывает коструктор метакласса
Overloadable и регистрирует обобщенные функции из суперклассов
показывается варнинг и генерик из подкласса перезаписовается
генериком из суперкласса
FIXED: в метод register_generic добавлен флаг override
позволяющий управлять поведением метода

FIXME: E100 при определении двух методов с одинаковыми сигнатурами
в разных классах связанных наследованием
в разрешении перегрузки участвует метод из суперкласса
это происходит потому что декоратор overload отрабатывает первым
а уже после метакласс Overloadable добавляет методы из суперклассов
и метод из подкласса вытесняется своим предшественником из
суперкласса

FIXED: в метод register_function добавлен параметр override если
он равен True функция с идентичной сигнатурой будет перезаписана иначе
функция не будет зарегестрированна

[0.7.1]

TODO: N40 для оптимизации вызова при реализации N30 можно использовать хеширование

TODO: N30 добавить, если найдено больше одной подходящей функции
выбор должен осуществляться с помощью определения самых ближних
к типу аргумента, типов в сигнатуре, путем просмотра иерархии наследования

[0.6.1]

FIXME: E90 решить проблему с показом двух одинаковых предупреждений в тесте
overloaded-generic-when methods in class inheritance and test super.txt
FIXED

FIXME: E80 формировать список всех методов во всех классах иерархии и искать в этом
списке, в место формировании цепочки и поиском в каждом классе
FIXED: теперь с помощью метакласса Overloadable каждый resolver формирует
список перегруженных методов включающий как методы определенные в пространстве
имен класса так и методов всех суперклассов